name: ECS CI/CD via Docker hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-2
  ECS_TASK_DEFINITION: ./task-definition.json
  CONTAINER_NAME: djangoapp
  ECS_SERVICE: djangoecs
  ECS_CLUSTER: djangodev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:${{ github.sha }} .
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:latest

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::529088268639:role/push_image
        role-session-name: UpdateECSService
        aws-region: ${{ env.AWS_REGION }}

    - name: Render ECS Task Definition
      id: render-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:latest

    - name: Deploy ECS Service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: ${{ env.ECS_CLUSTER }}
        service: ${{ env.ECS_SERVICE }}
        task-definition: ${{ steps.render-task-def.outputs.task-definition }}
        wait-for-service-stability: true
