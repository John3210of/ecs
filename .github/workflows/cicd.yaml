name: ECS CI/CD via Docker hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-2
  ECS_TASK_DEFINITION: ./task-definition.json
  CONTAINER_NAME: djangoecs
  ECS_SERVICE: djangoecs
  ECS_CLUSTER: djangodev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:${{ github.sha }} .
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/apiserver:latest

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::529088268639:role/push_image
        role-session-name: UpdateECSService
        aws-region: ${{ env.AWS_REGION }}

    - name: Update ECS Task Definition
      id: update-task-def
      run: |
        sed -e "s|<IMAGE>|${{ secrets.DOCKERHUB_USERNAME }}/apiserver:latest|" ${{ env.ECS_TASK_DEFINITION }} > updated-task-definition.json
        aws ecs register-task-definition --cli-input-json file://updated-task-definition.json

    # ECS 서비스 업데이트 및 배포 깔쥐
    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment
